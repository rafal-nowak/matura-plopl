version: '3'
services:
  db:
    container_name: postgres
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=defaultdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=var/lib/postgresql/data
    command: [ "postgres", "-c", "log_statement=all" ]
    volumes:
      - ./volumes/postgresql:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  postgres-it:
    image: postgres:16-alpine
    ports:
      - "5332:5432"
    environment:
      - POSTGRES_DB=defaultdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=var/lib/postgresql/data
    command: [ "postgres", "-c", "log_statement=all" ]
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - db

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: matura-zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: matuta-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Ustawienia transakcji
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # Automatyczne tworzenie topik√≥w przy starcie
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "kafka-task-json:3:1,kafka-task-report-json:3:1"

volumes:
  data: {}

networks:
  postgres:
    driver: bridge