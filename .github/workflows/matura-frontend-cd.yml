name: CD - Deploy Matura Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - staging
    paths:
      - frontend/matura/**

jobs:
  deploy:
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/matura

    steps:
      - uses: actions/checkout@v3
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%Y.%m.%d.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Docker Build and push
        run: |
          chmod +x ../../.ci/build-publish.sh
          USERNAME=rafalnowak444 \
          REPO=matura-react \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \
          ../../.ci/build-publish.sh . \
            --build-arg vite_api_url=https://test.matura-api.it4u.app/api \
            --build-arg vite_pylsp_url=wss://test.lsp.it4u.app

      # Wybór kubeconfig
      - name: Select kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_TEST_CONTENT }}" > $HOME/kubeconfig

      # Konfiguracja kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          mv $HOME/kubeconfig $HOME/.kube/config

      # Test połączenia z Kubernetesem
      - name: Test connection to Kubernetes
        run: kubectl get pods

      # Zmiana obrazu w pliku deployment-matura-frontend.yaml
      - name: Update deployment-matura-frontend.yaml with new image tag
        run: |
          sed -i 's@image: rafalnowak444/matura-react:.*@image: rafalnowak444/matura-react:${{ steps.build-number.outputs.BUILD_NUMBER }}@' ../../deployment/deployment-matura-frontend.yaml

      # Wykonanie kubectl apply dla deployment-matura-frontend.yaml
      - name: Apply Kubernetes Deployment
        run: kubectl apply -f ../../deployment/deployment-matura-frontend.yaml