name: CD - Deploy Matura Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
    paths:
      - backend/matura/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: defaultdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./backend/matura

    steps:
      # Sprawdzenie repozytorium
      - uses: actions/checkout@v3

      # Konfiguracja Javy
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # Logowanie do Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Ustawienie numeru buildu
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%Y.%m.%d.%H.%M.%S')" >> $GITHUB_OUTPUT

      # Budowanie obrazu Docker i jego wypchnięcie z unikalnym tagiem
      - name: Build and Push Docker Image
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build

      # Wybór kubeconfig w zależności od gałęzi
      - name: Select kubeconfig
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/kubeconfig
          elif [ "${{ github.ref_name }}" = "staging" ]; then
            echo "${{ secrets.KUBECONFIG_TEST_CONTENT }}" > $HOME/kubeconfig
          else
            echo "Unexpected branch: ${{ github.ref_name }}"
            exit 1
          fi

      # Konfiguracja kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          mv $HOME/kubeconfig $HOME/.kube/config

      - name: Test connection to Kubernetes
        run: kubectl get pods

      # Zmiana obrazu w pliku deployment-matura-api.yaml w folderze ./deployment
      - name: Update deployment-matura-api.yaml with new image tag
        run: |
          sed -i 's@image: rafalnowak444/matura-api:.*@image: rafalnowak444/matura-api:${{ steps.build-number.outputs.BUILD_NUMBER }}@' ../../deployment/deployment-matura-api.yaml

      # Wykonanie kubectl apply dla deployment-matura-api.yaml (z folderu ./deployment)
      - name: Apply Kubernetes Deployment
        run: kubectl apply -f ../../deployment/deployment-matura-api.yaml
